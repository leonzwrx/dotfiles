# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Terminal
set $term terminator
set $term_float footclient -a floating_shell
set $term_float_portrait footclient -a floating_shell_portrait

# Add --to-code to bindsym, support for non-latin layouts
set $bindsym bindsym --to-code

# Onscreen bar (WOB) - REMOVE and remove the script?
#set $onscreen_bar bash $HOME/.config/sway/scripts/wob.sh "$accent-color" "$background-color"

# Volume notification
set $volume_bar $HOME/.config/sway/scripts/volume-notify.sh

# Brightness notification
set $brightness_bar $HOME/.config/sway/scripts/brightness-notify.sh

# brightness control
set $brightness $HOME/.config/sway/scripts/brightness.sh
set $brightness_up $brightness up && $brightness_bar
set $brightness_down $brightness down && $brightness_bar

#### Volume control - Commenting this out on Fedora since there is no pulsemixer or pulseaudio
# Instead - there is pamixer and pavucontrol
#set $volume_down pulsemixer --change-volume -5 && $onscreen_bar $(pulsemixer --get-volume)
#set $volume_up pulsemixer --change-volume +5 && $onscreen_bar $(pulsemixer --get-volume)
#set $volume_mute pulsemixer --toggle-mute && $onscreen_bar $(pulsemixer --get-volume)
###
# pulseaudio command
#set $pulseaudio $term_float pulsemixer

# Volume control
#set $volume_down pamixer --decrease 5 && $onscreen_bar $(pamixer --get-volume)
#set $volume_up pamixer --increase 5 && $onscreen_bar $(pamixer --get-volume)
#set $volume_mute pamixer --toggle-mute && $onscreen_bar $(pamixer --get-volume)
set $volume_down pulsemixer --change-volume -5 && $volume_bar
set $volume_up pulsemixer --change-volume +5 && $volume_bar
set $volume_mute pulsemixer --toggle-mute && $volume_bar

# PulseAudio control
#set $pulseaudio $term_float pavucontrol
set $pulseaudio $term_float_portrait pulsemixer


# calendar application
set $calendar $term_float khal interactive

# help overlay
set $help_menu '[ -x "$(command -v nwg-wrapper)" ] && [ -f $HOME/.config/nwg-wrapper/help.sh ] && $HOME/.config/sway/scripts/help.sh'

# help overlay command
set $help $HOME/.config/sway/scripts/help.sh --toggle

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10

# rofi theme
# set $rofi_theme "* {lightbg: $background-color; background: $background-color; lightfg: $accent-color; foreground: $text-color; border-color: $accent-color;} window {border: 2;}"

# Application launcher
# set $menu wofi --show drun --allow-images --allow-markup --hide-scroll --no-actions
#set $menu rofi -show drun -terminal $term -show-icons -show-icons -ssh-command "ssh {host}"
set $menu rofi -show drun -terminal $term -show-icons -show-icons -modi "window,run,drun" -theme fancy

# Clipboard tool
set $clipboard clipman pick --tool wofi -T'--prompt=Clipboard -i'

# Clipboard manager
set $cliphist_store '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v clipman)" ] && wl-paste -t text --watch clipman store'
set $cliphist_store_2 '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v clipman)" ] wl-paste -p -t text --watch clipman store -P --histpath="$HOME/.local/share/clipman-primary.json"
set $cliphist_watch '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v clipman)" ] && wl-paste --watch pkill -RTMIN+9 waybar'

# File manager
set $filer pcmanfm

# Chrome
set $browser google-chrome-stable

# Default workspaces for common programms
assign [app_id="terminator"] workspace 1
assign [app_id="google-chrome-stable"] workspace 2
assign [class="Google-chrome"] workspace 2
assign [class="Pcmanfm"] workspace 3
assign [app_id="virt-manager"] workspace 4
assign [app_id="virt-viewer"] workspace 4
assign [instance ="DesktopEditors"] workspace 5

## screenshot - commenting out since switching to 100% sway remix-style screenshot
#set $grimshot /usr/bin/grimshot
#set $pipe_output $grimshot save output -
#set $pipe_selection $grimshot save window -
##set $pipe_active $grimshot save active -
#set $pipe_anything $grimshot save anything -
#set $notify_paste bash -c '[[ $(wl-paste -l) == "image/png" ]] && notify-send "Screenshot copied to clipboard"'
#set $swappy swappy -f -
#
#set $screenshot_screen $pipe_output | $swappy && $notify_paste
#set $screenshot_selection $pipe_selection | $swappy && $notify_paste
##set $screenshot_active $pipe_active | $swappy && $notify_paste
#set $screenshot_anything $pipe_anything | $swappy && notify_paste

# screenshot
set $grimshot /usr/bin/grimshot
set $pipe_output $grimshot save output -
set $pipe_selection $grimshot save window -
set $pipe_active $grimshot save active -
set $notify_paste bash -c '[[ $(wl-paste -l) == "image/png" ]] && notify-send "Screenshot copied to clipboard"'
set $swappy swappy -f -

set $screenshot_screen $pipe_output | $swappy && $notify_paste
set $screenshot_selection $pipe_selection | $swappy && $notify_paste
set $screenshot_active $pipe_active | $swappy && $notify_paste

# commenting out since I want rofi to just have my default theme
# Update Rofi theme based on $rofi_theme colors
#set $update_rofi_theme mkdir -p $HOME/.config/rofi/ && echo $rofi_theme > $HOME/.config/rofi/config.rasi

# Notifications from Swappy
set $swappy_notify '[ -x "$(command -v swappy)" ] && $HOME/.config/sway/scripts/screenshot-notify.sh'


set $polkit_agent /usr/libexec/polkit-mate-authentication-agent-1

# Night color
set $wlsunset '[ -x "$(command -v wlsunset)" ] && $HOME/.config/sway/scripts/sunset.sh "on"'

# switch between top-level containers (windows) in a workspace
set $switch_toplevel '[ -f $HOME/.config/sway/scripts/switch-top-level.py ] && $HOME/.config/sway/scripts/switch-top-level.py'

# restart kanshi https://github.com/emersion/kanshi/issues/43#issuecomment-531679213
set $kanshi '[ -x "$(command -v kanshi)" ] && pkill kanshi; exec kanshi'

# Autotiling script
set $autotiling '[ -x "$(command -v autotiling)" ] && autotiling --limit 2'

# Start playerctl as daemon
set $watch_playerctl '[ -x "$(command -v playerctl)" ] && pkill playerctl; playerctl -a metadata --format \'{{status}} {{title}}\' --follow | while read line; do pkill -RTMIN+5 waybar; done'
